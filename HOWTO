HOWTO:
	For creating a window:
		Create basic windows
			InfiCreateWindow( dimensions,
							  ? frame_rate = 60 );
			InfiCreateWindow( name,
							  dimensions,
							  ? frame_rate = 60 );
		Create a more complicated window
			InfiCreateWindow( infi_window_spec_t );
			
		Creating an extension
			class Extension : public infi_extension_t,
							  public UsingUpdate,
							  public UsingPrerender,
							  public UsingRender
							  public UsingPostrender {
				Extension() :
					infi_extension_t( extension_name ) { ... }
				
				void Initialize( infi_window_t* );
				void Detach( infi_window_t* );
				
				void Update( float64 dt );
				void Prerender( float64 dt );
				void Render( const vec2ui& window_size, float64 dt );
				void Postrender( float64 dt );
				
				infi_window_t& Parent();
			}
		
		Add functionality to a window
			InfiExtendWindow( infi_window_t*,
							  infi_extensions_t* );
		
	For a basic rendering program:
	
		enable elements
			InfiPushCanvas( infi_canvas_t* );		 -- what is being rendered to?
			InfiPushCamera( infi_view_transform_t* ) -- how is the render going to be sized?
			InfiPushProgram( infi_program_t* );		 -- how are the pixels going to show up?
			InfiPushVertices( infi_vertices_t* );	 -- what objects are being rendered?
		
		to run the program that has been setup
			InfiDraw();
		
		set elements to original values
			InfiPopCanvas();
			InfiPopCamera();
			InfiPopProgram();
			InfiPopVertices();