#ifndef __INFI_KEYCODE_INPUT_H__
#define __INFI_KEYCODE_INPUT_H__

#include "core/infi_bitfield.h"
#include "core/infi_reserved_array.h"
#include "main/infi_error.h"
#include "sdl/sdl.h"

namespace INFI {
	
	struct INFI_code {
		uint16 flags;
		uint16 onstack;
		uint32 index;
	};
	
	struct infi_keyboard_t {
		
		float64 							init_time;
		core::bitfield_t					isset;
		core::bitfield_t					isdown;
		core::bitfield_t					isup;
		core::reserved_array_t<INFI_code> 	ondown;
		core::reserved_array_t<INFI_code> 	onup;
		core::array_t<float64> 				tdown;
		core::array_t<float64> 				tup;
		
		infi_keyboard_t( uint32 sz );
		virtual ~infi_keyboard_t() { ; }
		
		virtual void reset();
		virtual void syncWith( infi_keyboard_t* other );
		
		void push_down( uint16 kcode, uint16 mods, float64 t );
		void push_up( uint16 kcode, uint16 mods, float64 t );
		
	};
	
	// low level access functions
	INFI_FUNCTION( uint32, InfiLGetPressed, ( infi_keyboard_t* kb, uint32 code ) );
	INFI_FUNCTION( const INFI_code&, InfiLGetPressed, ( infi_keyboard_t* kb, uint32 code, uint32 instance ) );
	
	INFI_FUNCTION( uint32, InfiLGetReleased, ( infi_keyboard_t* kb, uint32 code ) );
	INFI_FUNCTION( const INFI_code&, InfiLGetReleased, ( infi_keyboard_t* kb, uint32 code, uint32& instance ) );
	
	// use these functions
	INFI_FUNCTION( uint32, InfiKey, ( uint32 code ) );
	
	INFI_FUNCTION( uint32, InfiKeyPressed, ( uint32 code ) );
	INFI_FUNCTION( const INFI_code&, InfiKeyPressed, ( uint32 code, uint32 instance ) );
	
	INFI_FUNCTION( uint32, InfiKeyReleased, ( uint32 code ) );
	INFI_FUNCTION( const INFI_code&, InfiKeyReleased, ( uint32 code, uint32 instance ) );
	
}

#define INFI_KEYBOARD_SIZE 288

#define INFI_KEYCODE_UNKNOWN SDL_SCANCODE_UNKNOWN
#define INFI_KEYCODE_A SDL_SCANCODE_A
#define INFI_KEYCODE_B SDL_SCANCODE_B
#define INFI_KEYCODE_C SDL_SCANCODE_C
#define INFI_KEYCODE_D SDL_SCANCODE_D
#define INFI_KEYCODE_E SDL_SCANCODE_E
#define INFI_KEYCODE_F SDL_SCANCODE_F
#define INFI_KEYCODE_G SDL_SCANCODE_G
#define INFI_KEYCODE_H SDL_SCANCODE_H
#define INFI_KEYCODE_I SDL_SCANCODE_I
#define INFI_KEYCODE_J SDL_SCANCODE_J
#define INFI_KEYCODE_K SDL_SCANCODE_K
#define INFI_KEYCODE_L SDL_SCANCODE_L
#define INFI_KEYCODE_M SDL_SCANCODE_M
#define INFI_KEYCODE_N SDL_SCANCODE_N
#define INFI_KEYCODE_O SDL_SCANCODE_O
#define INFI_KEYCODE_P SDL_SCANCODE_P
#define INFI_KEYCODE_Q SDL_SCANCODE_Q
#define INFI_KEYCODE_R SDL_SCANCODE_R
#define INFI_KEYCODE_S SDL_SCANCODE_S
#define INFI_KEYCODE_T SDL_SCANCODE_T
#define INFI_KEYCODE_U SDL_SCANCODE_U
#define INFI_KEYCODE_V SDL_SCANCODE_V
#define INFI_KEYCODE_W SDL_SCANCODE_W
#define INFI_KEYCODE_X SDL_SCANCODE_X
#define INFI_KEYCODE_Y SDL_SCANCODE_Y
#define INFI_KEYCODE_Z SDL_SCANCODE_Z
#define INFI_KEYCODE_1 SDL_SCANCODE_1
#define INFI_KEYCODE_2 SDL_SCANCODE_2
#define INFI_KEYCODE_3 SDL_SCANCODE_3
#define INFI_KEYCODE_4 SDL_SCANCODE_4
#define INFI_KEYCODE_5 SDL_SCANCODE_5
#define INFI_KEYCODE_6 SDL_SCANCODE_6
#define INFI_KEYCODE_7 SDL_SCANCODE_7
#define INFI_KEYCODE_8 SDL_SCANCODE_8
#define INFI_KEYCODE_9 SDL_SCANCODE_9
#define INFI_KEYCODE_0 SDL_SCANCODE_0
#define INFI_KEYCODE_RETURN SDL_SCANCODE_RETURN
#define INFI_KEYCODE_ESCAPE SDL_SCANCODE_ESCAPE
#define INFI_KEYCODE_BACKSPACE SDL_SCANCODE_BACKSPACE
#define INFI_KEYCODE_TAB SDL_SCANCODE_TAB
#define INFI_KEYCODE_SPACE SDL_SCANCODE_SPACE
#define INFI_KEYCODE_MINUS SDL_SCANCODE_MINUS
#define INFI_KEYCODE_EQUALS SDL_SCANCODE_EQUALS
#define INFI_KEYCODE_LEFTBRACKET SDL_SCANCODE_LEFTBRACKET
#define INFI_KEYCODE_RIGHTBRACKET SDL_SCANCODE_RIGHTBRACKET
#define INFI_KEYCODE_BACKSLASH SDL_SCANCODE_BACKSLASH
#define INFI_KEYCODE_NONUSHASH SDL_SCANCODE_NONUSHASH
#define INFI_KEYCODE_SEMICOLON SDL_SCANCODE_SEMICOLON
#define INFI_KEYCODE_APOSTROPHE SDL_SCANCODE_APOSTROPHE
#define INFI_KEYCODE_GRAVE SDL_SCANCODE_GRAVE
#define INFI_KEYCODE_COMMA SDL_SCANCODE_COMMA
#define INFI_KEYCODE_PERIOD SDL_SCANCODE_PERIOD
#define INFI_KEYCODE_SLASH SDL_SCANCODE_SLASH
#define INFI_KEYCODE_CAPSLOCK SDL_SCANCODE_CAPSLOCK
#define INFI_KEYCODE_F1 SDL_SCANCODE_F1
#define INFI_KEYCODE_F2 SDL_SCANCODE_F2
#define INFI_KEYCODE_F3 SDL_SCANCODE_F3
#define INFI_KEYCODE_F4 SDL_SCANCODE_F4
#define INFI_KEYCODE_F5 SDL_SCANCODE_F5
#define INFI_KEYCODE_F6 SDL_SCANCODE_F6
#define INFI_KEYCODE_F7 SDL_SCANCODE_F7
#define INFI_KEYCODE_F8 SDL_SCANCODE_F8
#define INFI_KEYCODE_F9 SDL_SCANCODE_F9
#define INFI_KEYCODE_F10 SDL_SCANCODE_F10
#define INFI_KEYCODE_F11 SDL_SCANCODE_F11
#define INFI_KEYCODE_F12 SDL_SCANCODE_F12
#define INFI_KEYCODE_PRINTSCREEN SDL_SCANCODE_PRINTSCREEN
#define INFI_KEYCODE_SCROLLLOCK SDL_SCANCODE_SCROLLLOCK
#define INFI_KEYCODE_PAUSE SDL_SCANCODE_PAUSE
#define INFI_KEYCODE_INSERT SDL_SCANCODE_INSERT
#define INFI_KEYCODE_HOME SDL_SCANCODE_HOME
#define INFI_KEYCODE_PAGEUP SDL_SCANCODE_PAGEUP
#define INFI_KEYCODE_DELETE SDL_SCANCODE_DELETE
#define INFI_KEYCODE_END SDL_SCANCODE_END
#define INFI_KEYCODE_PAGEDOWN SDL_SCANCODE_PAGEDOWN
#define INFI_KEYCODE_RIGHT SDL_SCANCODE_RIGHT
#define INFI_KEYCODE_LEFT SDL_SCANCODE_LEFT
#define INFI_KEYCODE_DOWN SDL_SCANCODE_DOWN
#define INFI_KEYCODE_UP SDL_SCANCODE_UP
#define INFI_KEYCODE_NUMLOCKCLEAR SDL_SCANCODE_NUMLOCKCLEAR
#define INFI_KEYCODE_KP_DIVIDE SDL_SCANCODE_KP_DIVIDE
#define INFI_KEYCODE_KP_MULTIPLY SDL_SCANCODE_KP_MULTIPLY
#define INFI_KEYCODE_KP_MINUS SDL_SCANCODE_KP_MINUS
#define INFI_KEYCODE_KP_PLUS SDL_SCANCODE_KP_PLUS
#define INFI_KEYCODE_KP_ENTER SDL_SCANCODE_KP_ENTER
#define INFI_KEYCODE_KP_1 SDL_SCANCODE_KP_1
#define INFI_KEYCODE_KP_2 SDL_SCANCODE_KP_2
#define INFI_KEYCODE_KP_3 SDL_SCANCODE_KP_3
#define INFI_KEYCODE_KP_4 SDL_SCANCODE_KP_4
#define INFI_KEYCODE_KP_5 SDL_SCANCODE_KP_5
#define INFI_KEYCODE_KP_6 SDL_SCANCODE_KP_6
#define INFI_KEYCODE_KP_7 SDL_SCANCODE_KP_7
#define INFI_KEYCODE_KP_8 SDL_SCANCODE_KP_8
#define INFI_KEYCODE_KP_9 SDL_SCANCODE_KP_9
#define INFI_KEYCODE_KP_0 SDL_SCANCODE_KP_0
#define INFI_KEYCODE_KP_PERIOD SDL_SCANCODE_KP_PERIOD
#define INFI_KEYCODE_NONUSBACKSLASH SDL_SCANCODE_NONUSBACKSLASH
#define INFI_KEYCODE_APPLICATION SDL_SCANCODE_APPLICATION
#define INFI_KEYCODE_POWER SDL_SCANCODE_POWER
#define INFI_KEYCODE_KP_EQUALS SDL_SCANCODE_KP_EQUALS
#define INFI_KEYCODE_F13 SDL_SCANCODE_F13
#define INFI_KEYCODE_F14 SDL_SCANCODE_F14
#define INFI_KEYCODE_F15 SDL_SCANCODE_F15
#define INFI_KEYCODE_F16 SDL_SCANCODE_F16
#define INFI_KEYCODE_F17 SDL_SCANCODE_F17
#define INFI_KEYCODE_F18 SDL_SCANCODE_F18
#define INFI_KEYCODE_F19 SDL_SCANCODE_F19
#define INFI_KEYCODE_F20 SDL_SCANCODE_F20
#define INFI_KEYCODE_F21 SDL_SCANCODE_F21
#define INFI_KEYCODE_F22 SDL_SCANCODE_F22
#define INFI_KEYCODE_F23 SDL_SCANCODE_F23
#define INFI_KEYCODE_F24 SDL_SCANCODE_F24
#define INFI_KEYCODE_EXECUTE SDL_SCANCODE_EXECUTE
#define INFI_KEYCODE_HELP SDL_SCANCODE_HELP
#define INFI_KEYCODE_MENU SDL_SCANCODE_MENU
#define INFI_KEYCODE_SELECT SDL_SCANCODE_SELECT
#define INFI_KEYCODE_STOP SDL_SCANCODE_STOP
#define INFI_KEYCODE_AGAIN SDL_SCANCODE_AGAIN
#define INFI_KEYCODE_UNDO SDL_SCANCODE_UNDO
#define INFI_KEYCODE_CUT SDL_SCANCODE_CUT
#define INFI_KEYCODE_COPY SDL_SCANCODE_COPY
#define INFI_KEYCODE_PASTE SDL_SCANCODE_PASTE
#define INFI_KEYCODE_FIND SDL_SCANCODE_FIND
#define INFI_KEYCODE_MUTE SDL_SCANCODE_MUTE
#define INFI_KEYCODE_VOLUMEUP SDL_SCANCODE_VOLUMEUP
#define INFI_KEYCODE_VOLUMEDOWN SDL_SCANCODE_VOLUMEDOWN
#define INFI_KEYCODE_KP_COMMA SDL_SCANCODE_KP_COMMA
#define INFI_KEYCODE_KP_EQUALSAS400 SDL_SCANCODE_KP_EQUALSAS400
#define INFI_KEYCODE_INTERNATIONAL1 SDL_SCANCODE_INTERNATIONAL1
#define INFI_KEYCODE_INTERNATIONAL2 SDL_SCANCODE_INTERNATIONAL2
#define INFI_KEYCODE_INTERNATIONAL3 SDL_SCANCODE_INTERNATIONAL3
#define INFI_KEYCODE_INTERNATIONAL4 SDL_SCANCODE_INTERNATIONAL4
#define INFI_KEYCODE_INTERNATIONAL5 SDL_SCANCODE_INTERNATIONAL5
#define INFI_KEYCODE_INTERNATIONAL6 SDL_SCANCODE_INTERNATIONAL6
#define INFI_KEYCODE_INTERNATIONAL7 SDL_SCANCODE_INTERNATIONAL7
#define INFI_KEYCODE_INTERNATIONAL8 SDL_SCANCODE_INTERNATIONAL8
#define INFI_KEYCODE_INTERNATIONAL9 SDL_SCANCODE_INTERNATIONAL9
#define INFI_KEYCODE_LANG1 SDL_SCANCODE_LANG1
#define INFI_KEYCODE_LANG2 SDL_SCANCODE_LANG2
#define INFI_KEYCODE_LANG3 SDL_SCANCODE_LANG3
#define INFI_KEYCODE_LANG4 SDL_SCANCODE_LANG4
#define INFI_KEYCODE_LANG5 SDL_SCANCODE_LANG5
#define INFI_KEYCODE_LANG6 SDL_SCANCODE_LANG6
#define INFI_KEYCODE_LANG7 SDL_SCANCODE_LANG7
#define INFI_KEYCODE_LANG8 SDL_SCANCODE_LANG8
#define INFI_KEYCODE_LANG9 SDL_SCANCODE_LANG9
#define INFI_KEYCODE_ALTERASE SDL_SCANCODE_ALTERASE
#define INFI_KEYCODE_SYSREQ SDL_SCANCODE_SYSREQ
#define INFI_KEYCODE_CANCEL SDL_SCANCODE_CANCEL
#define INFI_KEYCODE_CLEAR SDL_SCANCODE_CLEAR
#define INFI_KEYCODE_PRIOR SDL_SCANCODE_PRIOR
#define INFI_KEYCODE_RETURN2 SDL_SCANCODE_RETURN2
#define INFI_KEYCODE_SEPARATOR SDL_SCANCODE_SEPARATOR
#define INFI_KEYCODE_OUT SDL_SCANCODE_OUT
#define INFI_KEYCODE_OPER SDL_SCANCODE_OPER
#define INFI_KEYCODE_CLEARAGAIN SDL_SCANCODE_CLEARAGAIN
#define INFI_KEYCODE_CRSEL SDL_SCANCODE_CRSEL
#define INFI_KEYCODE_EXSEL SDL_SCANCODE_EXSEL
#define INFI_KEYCODE_KP_00 SDL_SCANCODE_KP_00
#define INFI_KEYCODE_KP_000 SDL_SCANCODE_KP_000
#define INFI_KEYCODE_THOUSANDSSEPARATOR SDL_SCANCODE_THOUSANDSSEPARATOR
#define INFI_KEYCODE_DECIMALSEPARATOR SDL_SCANCODE_DECIMALSEPARATOR
#define INFI_KEYCODE_CURRENCYUNIT SDL_SCANCODE_CURRENCYUNIT
#define INFI_KEYCODE_CURRENCYSUBUNIT SDL_SCANCODE_CURRENCYSUBUNIT
#define INFI_KEYCODE_KP_LEFTPAREN SDL_SCANCODE_KP_LEFTPAREN
#define INFI_KEYCODE_KP_RIGHTPAREN SDL_SCANCODE_KP_RIGHTPAREN
#define INFI_KEYCODE_KP_LEFTBRACE SDL_SCANCODE_KP_LEFTBRACE
#define INFI_KEYCODE_KP_RIGHTBRACE SDL_SCANCODE_KP_RIGHTBRACE
#define INFI_KEYCODE_KP_TAB SDL_SCANCODE_KP_TAB
#define INFI_KEYCODE_KP_BACKSPACE SDL_SCANCODE_KP_BACKSPACE
#define INFI_KEYCODE_KP_A SDL_SCANCODE_KP_A
#define INFI_KEYCODE_KP_B SDL_SCANCODE_KP_B
#define INFI_KEYCODE_KP_C SDL_SCANCODE_KP_C
#define INFI_KEYCODE_KP_D SDL_SCANCODE_KP_D
#define INFI_KEYCODE_KP_E SDL_SCANCODE_KP_E
#define INFI_KEYCODE_KP_F SDL_SCANCODE_KP_F
#define INFI_KEYCODE_KP_XOR SDL_SCANCODE_KP_XOR
#define INFI_KEYCODE_KP_POWER SDL_SCANCODE_KP_POWER
#define INFI_KEYCODE_KP_PERCENT SDL_SCANCODE_KP_PERCENT
#define INFI_KEYCODE_KP_LESS SDL_SCANCODE_KP_LESS
#define INFI_KEYCODE_KP_GREATER SDL_SCANCODE_KP_GREATER
#define INFI_KEYCODE_KP_AMPERSAND SDL_SCANCODE_KP_AMPERSAND
#define INFI_KEYCODE_KP_DBLAMPERSAND SDL_SCANCODE_KP_DBLAMPERSAND
#define INFI_KEYCODE_KP_VERTICALBAR SDL_SCANCODE_KP_VERTICALBAR
#define INFI_KEYCODE_KP_DBLVERTICALBAR SDL_SCANCODE_KP_DBLVERTICALBAR
#define INFI_KEYCODE_KP_COLON SDL_SCANCODE_KP_COLON
#define INFI_KEYCODE_KP_HASH SDL_SCANCODE_KP_HASH
#define INFI_KEYCODE_KP_SPACE SDL_SCANCODE_KP_SPACE
#define INFI_KEYCODE_KP_AT SDL_SCANCODE_KP_AT
#define INFI_KEYCODE_KP_EXCLAM SDL_SCANCODE_KP_EXCLAM
#define INFI_KEYCODE_KP_MEMSTORE SDL_SCANCODE_KP_MEMSTORE
#define INFI_KEYCODE_KP_MEMRECALL SDL_SCANCODE_KP_MEMRECALL
#define INFI_KEYCODE_KP_MEMCLEAR SDL_SCANCODE_KP_MEMCLEAR
#define INFI_KEYCODE_KP_MEMADD SDL_SCANCODE_KP_MEMADD
#define INFI_KEYCODE_KP_MEMSUBTRACT SDL_SCANCODE_KP_MEMSUBTRACT
#define INFI_KEYCODE_KP_MEMMULTIPLY SDL_SCANCODE_KP_MEMMULTIPLY
#define INFI_KEYCODE_KP_MEMDIVIDE SDL_SCANCODE_KP_MEMDIVIDE
#define INFI_KEYCODE_KP_PLUSMINUS SDL_SCANCODE_KP_PLUSMINUS
#define INFI_KEYCODE_KP_CLEAR SDL_SCANCODE_KP_CLEAR
#define INFI_KEYCODE_KP_CLEARENTRY SDL_SCANCODE_KP_CLEARENTRY
#define INFI_KEYCODE_KP_BINARY SDL_SCANCODE_KP_BINARY
#define INFI_KEYCODE_KP_OCTAL SDL_SCANCODE_KP_OCTAL
#define INFI_KEYCODE_KP_DECIMAL SDL_SCANCODE_KP_DECIMAL
#define INFI_KEYCODE_KP_HEXADECIMAL SDL_SCANCODE_KP_HEXADECIMAL
#define INFI_KEYCODE_LCTRL SDL_SCANCODE_LCTRL
#define INFI_KEYCODE_LSHIFT SDL_SCANCODE_LSHIFT
#define INFI_KEYCODE_LALT SDL_SCANCODE_LALT
#define INFI_KEYCODE_LGUI SDL_SCANCODE_LGUI
#define INFI_KEYCODE_RCTRL SDL_SCANCODE_RCTRL
#define INFI_KEYCODE_RSHIFT SDL_SCANCODE_RSHIFT
#define INFI_KEYCODE_RALT SDL_SCANCODE_RALT
#define INFI_KEYCODE_RGUI SDL_SCANCODE_RGUI
#define INFI_KEYCODE_MODE SDL_SCANCODE_MODE
#define INFI_KEYCODE_AUDIONEXT SDL_SCANCODE_AUDIONEXT
#define INFI_KEYCODE_AUDIOPREV SDL_SCANCODE_AUDIOPREV
#define INFI_KEYCODE_AUDIOSTOP SDL_SCANCODE_AUDIOSTOP
#define INFI_KEYCODE_AUDIOPLAY SDL_SCANCODE_AUDIOPLAY
#define INFI_KEYCODE_AUDIOMUTE SDL_SCANCODE_AUDIOMUTE
#define INFI_KEYCODE_MEDIASELECT SDL_SCANCODE_MEDIASELECT
#define INFI_KEYCODE_WWW SDL_SCANCODE_WWW
#define INFI_KEYCODE_MAIL SDL_SCANCODE_MAIL
#define INFI_KEYCODE_CALCULATOR SDL_SCANCODE_CALCULATOR
#define INFI_KEYCODE_COMPUTER SDL_SCANCODE_COMPUTER
#define INFI_KEYCODE_AC_SEARCH SDL_SCANCODE_AC_SEARCH
#define INFI_KEYCODE_AC_HOME SDL_SCANCODE_AC_HOME
#define INFI_KEYCODE_AC_BACK SDL_SCANCODE_AC_BACK
#define INFI_KEYCODE_AC_FORWARD SDL_SCANCODE_AC_FORWARD
#define INFI_KEYCODE_AC_STOP SDL_SCANCODE_AC_STOP
#define INFI_KEYCODE_AC_REFRESH SDL_SCANCODE_AC_REFRESH
#define INFI_KEYCODE_AC_BOOKMARKS SDL_SCANCODE_AC_BOOKMARKS
#define INFI_KEYCODE_BRIGHTNESSDOWN SDL_SCANCODE_BRIGHTNESSDOWN
#define INFI_KEYCODE_BRIGHTNESSUP SDL_SCANCODE_BRIGHTNESSUP
#define INFI_KEYCODE_DISPLAYSWITCH SDL_SCANCODE_DISPLAYSWITCH
#define INFI_KEYCODE_KBDILLUMTOGGLE SDL_SCANCODE_KBDILLUMTOGGLE
#define INFI_KEYCODE_KBDILLUMDOWN SDL_SCANCODE_KBDILLUMDOWN
#define INFI_KEYCODE_KBDILLUMUP SDL_SCANCODE_KBDILLUMUP
#define INFI_KEYCODE_EJECT SDL_SCANCODE_EJECT
#define INFI_KEYCODE_SLEEP SDL_SCANCODE_SLEEP
#define INFI_KEYCODE_APP1 SDL_SCANCODE_APP1
#define INFI_KEYCODE_APP2 SDL_SCANCODE_APP2

#define INFI_MOD_NONE KMOD_NONE
#define INFI_MOD_LSHIFT KMOD_LSHIFT
#define INFI_MOD_RSHIFT KMOD_RSHIFT
#define INFI_MOD_LCTRL KMOD_LCTRL
#define INFI_MOD_RCTRL KMOD_RCTRL
#define INFI_MOD_LALT KMOD_LALT
#define INFI_MOD_RALT KMOD_RALT
#define INFI_MOD_LGUI KMOD_LGUI
#define INFI_MOD_RGUI KMOD_RGUI
#define INFI_MOD_NUM KMOD_NUM
#define INFI_MOD_CAPS KMOD_CAPS
#define INFI_MOD_MODE KMOD_MODE
#define INFI_MOD_RESERVED KMOD_RESERVED

#define INFI_K_LSHIFT 		0x0001
#define INFI_K_RSHIFT 		0x0002
#define INFI_K_SHIFT 		0x0003
#define INFI_K_LCTRL 		0x0004
#define INFI_K_RCTRL 		0x0008
#define INFI_K_LALT 		0x0010
#define INFI_K_RALT 		0x0020
#define INFI_K_LGUI 		0x0040
#define INFI_K_RGUI 		0x0080
#define INFI_K_NUMLOCK 		0x0100
#define INFI_K_CAPSLOCK 	0x0200
#define INFI_KEY_MASK		0x03FF
#define INFI_KNEXT_EXISTS 	0x4000

namespace INFI {
	
	template<uint32 Code>
	struct infi_key_access_t {
		operator uint32 () const {
			return InfiKey( Code );
		}
		uint32 pressed() const {
			return InfiKeyPressed( Code );
		}
		const INFI_code& pressed( uint32 inst ) const {
			return InfiKeyPressed( Code, inst );
		}
		uint32 released() const {
			return InfiKeyReleased( Code );
		}
		const INFI_code& released( uint32 inst ) const {
			return InfiKeyReleased( Code, inst );
		}
	};
	
	struct infi_keyboard_access_t {
		struct : infi_key_access_t<INFI_KEYCODE_ESCAPE> {} escape;
		struct : infi_key_access_t<INFI_KEYCODE_RETURN> {} enter;
		
		struct : infi_key_access_t<INFI_KEYCODE_UP> {} up;
		struct : infi_key_access_t<INFI_KEYCODE_DOWN> {} down;
		struct : infi_key_access_t<INFI_KEYCODE_LEFT> {} left;
		struct : infi_key_access_t<INFI_KEYCODE_RIGHT> {} right;
		
		struct : infi_key_access_t<INFI_KEYCODE_A> {} A;
		struct : infi_key_access_t<INFI_KEYCODE_B> {} B;
		struct : infi_key_access_t<INFI_KEYCODE_C> {} C;
		struct : infi_key_access_t<INFI_KEYCODE_D> {} D;
		struct : infi_key_access_t<INFI_KEYCODE_E> {} E;
		struct : infi_key_access_t<INFI_KEYCODE_F> {} F;
		struct : infi_key_access_t<INFI_KEYCODE_G> {} G;
		struct : infi_key_access_t<INFI_KEYCODE_H> {} H;
		struct : infi_key_access_t<INFI_KEYCODE_I> {} I;
		struct : infi_key_access_t<INFI_KEYCODE_J> {} J;
		struct : infi_key_access_t<INFI_KEYCODE_K> {} K;
		struct : infi_key_access_t<INFI_KEYCODE_L> {} L;
		struct : infi_key_access_t<INFI_KEYCODE_M> {} M;
		struct : infi_key_access_t<INFI_KEYCODE_N> {} N;
		struct : infi_key_access_t<INFI_KEYCODE_O> {} O;
		struct : infi_key_access_t<INFI_KEYCODE_P> {} P;
		struct : infi_key_access_t<INFI_KEYCODE_Q> {} Q;
		struct : infi_key_access_t<INFI_KEYCODE_R> {} R;
		struct : infi_key_access_t<INFI_KEYCODE_S> {} S;
		struct : infi_key_access_t<INFI_KEYCODE_T> {} T;
		struct : infi_key_access_t<INFI_KEYCODE_U> {} U;
		struct : infi_key_access_t<INFI_KEYCODE_V> {} V;
		struct : infi_key_access_t<INFI_KEYCODE_W> {} W;
		struct : infi_key_access_t<INFI_KEYCODE_X> {} X;
		struct : infi_key_access_t<INFI_KEYCODE_Y> {} Y;
		struct : infi_key_access_t<INFI_KEYCODE_Z> {} Z;
		
		struct : infi_key_access_t<INFI_KEYCODE_0> {} zero;
		struct : infi_key_access_t<INFI_KEYCODE_1> {} one;
		struct : infi_key_access_t<INFI_KEYCODE_2> {} two;
		struct : infi_key_access_t<INFI_KEYCODE_3> {} three;
		struct : infi_key_access_t<INFI_KEYCODE_4> {} four;
		struct : infi_key_access_t<INFI_KEYCODE_5> {} five;
		struct : infi_key_access_t<INFI_KEYCODE_6> {} six;
		struct : infi_key_access_t<INFI_KEYCODE_7> {} seven;
		struct : infi_key_access_t<INFI_KEYCODE_8> {} eight;
		struct : infi_key_access_t<INFI_KEYCODE_9> {} nine;
	};
	
	const INFI_EXPORT infi_keyboard_access_t Keyboard;
	
}

#endif//__INFI_KEYCODE_INPUT_H__